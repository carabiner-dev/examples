{
    # PolicySet ID
    id: OSPS

    # PolicySet metadata
    meta: {
        runtime: "cel@v0"
        description: "Trivy vulnerability scanning policy set"
        version: 1
        enforce: "true"
    }

    # Common elements shared across all policies
    common: {
        identities: []
        references: []
        context: {}
    }

    # List of policies in this set
    policies: [
        {
            id: "AC-07"

            # Policy metadata
            meta: {
                description: "The project's version control system MUST require multi-factor authentication that does not include SMS"
                runtime: "cel@v0"
                assert_mode: "AND"
                version: 1
                enforce: "true"

                # Security framework control mappings
                controls: [
                    {
                        id: "OSPS-VM-02"
                        class: "OSPS"
                        framework: "OSPS"
                        title: "Vulnerability Management"
                    }
                ]
            }

            # Accepted signer identities
            identities: [
                {
                    id: "google-adolfo"
                    sigstore: {
                        mode: "exact"
                        issuer: "https://accounts.google.com"
                        identity: "adolfo.garcia@uservers.net"
                    }
                }
            ]

            # Policy tenets (individual checks)
            tenets: [
                # Tenet 1: Verify predicates exist
                {
                    runtime: "cel@v0"
                    code: "size(predicates) > 0"
                    predicates: {
                        types: ["https://trivy.dev/report"]
                    }
                }

                # Tenet 2: No CRITICAL vulnerabilities allowed
                {
                    runtime: "cel@v0"
                    code: "outputs[\"critical\"] == 0"
                    predicates: {
                        types: ["https://trivy.dev/report"]
                    }
                    outputs: {
                        # Count critical severity vulnerabilities
                        critical: {
                            code: "size(predicates[0].data.Results[0].Vulnerabilities.filter(vuln, vuln.Severity == \"CRITICAL\"))"
                        }

                        # Count high severity vulnerabilities (for reporting)
                        high: {
                            code: "size(predicates[0].data.Results[0].Vulnerabilities.filter(vuln, vuln.Severity == \"HIGH\"))"
                        }
                    }
                }
            ]
        }
    ]
}
