{
    "id": "OSPS",
    "metadata": {
        "runtime": "cel@v0"
    },
    "policies": [
        {
            "id": "OSPS-02",
            "meta": {
                "description": "The project's version control system MUST require multi-factor authentication that does not include SMS ",
                "runtime": "cel@v0",
                "assert_mode": "OR",
                "controls": [
                    { "class": "OSPS", "id": "QA-02" }
                ]
            },
            "identities": [
                {
                    "sigstore": {
                        "mode": "exact",
                        "issuer": "https://accounts.google.com",
                        "identity": "puerco@carabiner.dev"
                   }
                }
            ],
            "chain": [
                "predicate": {
                    "type": "https://slsa.dev/provenance/v0.2",
                    "selector": "predicate.data.materials[0]"
                }
            ],
            "tenets": [
                {
                    "code": "size(predicates) > 0",
                    "predicates": {
                        "types": ["https://spdx.dev/Document"]
                    },
                    "assessment": {
                        "message": "Found attested SBOM (SPDX)"
                    },
                    "error": {
                        "message": "No SPDX SBOM found",
                        "guidance": "Generate an SPDX SBOM from your code"
                    }
                },
                {
                    "code": "size(predicates) > 0",
                    "predicates": {
                        "types": ["https://cyclonedx.org/bom"]
                    },
                    "assessment": {
                        "message": "Found attested SBOM (CycloneDX)"
                    },
                    "error": {
                        "message": "No CycloneDX SBOM found",
                        "guidance": "Generate a CycloneDX SBOM from your code"
                    }
                }
            ]            
        },
        {
            "id": "OSPS-DO-01",
            "meta": {
                "description": "The project documentation MUST provide user guides for all basic functionality",
                "runtime": "cel@v0",
                "assert_mode": "AND",
                "controls": [
                    { "class": "OSPS", "id": "DO-01" }
                ]
            },
            "chain": {
                "predicate": {
                    "type": "https://slsa.dev/provenance/v0.2",
                    "selector": "predicate.data.materials[0]"
                }
            },
            "identities": [
                {
                    "sigstore": {
                        "mode": "exact",
                        "issuer": "https://accounts.google.com",
                        "identity": "puerco@carabiner.dev"
                   }
                }
            ],
            "tenets": [
                {
                    "code": "size(predicates) > 0",
                    "predicates": {
                        "types": ["https://github.com/ossf/security-insights-spec"]
                    },
                    "error": {
                        "message": "No Security Insights attestation found",
                        "guidance": "Capture your security insights flile in an attestations at build point"
                    },
                    "assessment": {
                        "message": "Security Insights attestation found"

                    }
                },   
                {
                    "code": "outputs[\"docs\"] != \"\"",
                    "outputs": {
                        "docs": {
                            "code": "\"documentation\" in predicates[0].data.project ? (\"detailed-guide\" in predicates[0].data.project.documentation ? predicates[0].data.project.documentation[\"detailed-guide\"] : \"\" ) : \"\" "
                        }
                    },
                    "predicates": {
                        "types": ["https://github.com/ossf/security-insights-spec"]
                    },
                    "assessment": {
                        "message": "Documentation link found in SECURITY_INSIGHTS.yaml"
                    },
                    "error": {
                        "message": "No documentation link found in SI",
                        "guidance": "Add a security insights file to your repository and define a documentation link"
                    }
                }
            ]            
        },
        {
            "id": "OSPS-DO-02",
            "meta": {
                "description": "The project MUST provide a mechanism for reporting defects.",
                "runtime": "cel@v0",
                "assert_mode": "AND",
                "controls": [
                    { "class": "OSPS", "id": "DO-02" }
                ]
            },
            "chain": {
                "predicate": {
                    "type": "https://slsa.dev/provenance/v0.2",
                    "selector": "predicate.data.materials[0]"
                }
            },
            "identities": [
                {
                    "sigstore": {
                        "mode": "exact",
                        "issuer": "https://accounts.google.com",
                        "identity": "puerco@carabiner.dev"
                   }
                }
            ],
            "tenets": [
                {
                    "code": "size(predicates) > 0",
                    "predicates": {
                        "types": ["https://github.com/ossf/security-insights-spec"]
                    },
                    "error": {
                        "message": "No Security Insights attestation found",
                        "guidance": "Capture your security insights file in an attestation at build point"
                    },
                    "assessment": {
                        "message": "Security Insights attestation found"

                    }
                },
                {
                    "code": "outputs[\"reporting\"]  ",
                    "outputs": {
                        "reporting": {
                            "code": "\"vulnerability-reporting\" in predicates[0].data.project ? (\"reports-accepted\" in predicates[0].data.project[\"vulnerability-reporting\"] ? predicates[0].data.project[\"vulnerability-reporting\"][\"reports-accepted\"]  : false  ) : false "
                        }
                    },
                    "predicates": {
                        "types": ["https://github.com/ossf/security-insights-spec"]
                    },
                    "assessment": {
                        "message": "Project accepts vulnerability reports according to SECURITY_INSIGHTS.yml"
                    },
                    "error": {
                        "message": "No vulnerability reports found in SI",
                        "guidance": "Add a security insights file to your repository and define reports-accepted as true under vulnerability-reporting"
                    }
                },
                {
                    "code": "outputs[\"vulnerability-report-contact\"]  ",
                    "outputs": {
                        "vulnerability-report-contact": {
                            "code": "\"vulnerability-reporting\" in predicates[0].data.project ? (\"contact\" in predicates[0].data.project[\"vulnerability-reporting\"]  ) : false "
                        }
                    },
                    "predicates": {
                        "types": ["https://github.com/ossf/security-insights-spec"]
                    },
                    "assessment": {
                        "message": "Vulnerability report contact found"
                    },
                    "error": {
                        "message": "No contact information found in SECURITY_INSIGHTS.yml",
                        "guidance": "Add contact data in the project's SECURITY_INSIGHTS.yml file, under vulnerability-reporting"
                    }
                }
            ]            
        }
    ]
}
