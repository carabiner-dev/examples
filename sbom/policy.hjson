{
    // HJSON format allows comments and relaxed syntax for easier policy authoring
    // This example demonstrates AMPEL policy structure using HJSON features

    runtime: cedar@v1.0.0
    id: OSPS
    version: "1"

    policies: [
        {
            id: AC-07
            version: v0.0.1

            meta: {
                // Policy description explaining its purpose
                description: "The project's version control system MUST require multi-factor authentication that does not include SMS"
                runtime: cel@v0
                assert_mode: OR

                // Controls can be linked to compliance frameworks
                controls: [
                    {
                        class: ""
                        id: ""
                    }
                ]
            }

            // Define trusted signer identities
            identities: [
                {
                    type: exact
                    issuer: https://accounts.google.com/
                    identity: puerco@gmail.com
                }
            ]

            // Context values allow policies to be reusable across environments
            context: {
                values: {
                    // String context value with default
                    author: {
                        type: string
                        required: true
                        default: Puerco
                    }

                    // Integer context value
                    count: {
                        type: int
                        required: true
                        default: 1
                    }

                    // List context value (note: trailing comma allowed in HJSON)
                    shopping_list: {
                        type: list
                        required: true
                        default: [soup, apples]
                    }
                }
            }

            // Transformers normalize predicate data for easier policy authoring
            transformers: [
                { id: internal:protobom }
            ]

            // Tenets are the core policy checks
            tenets: [
                {
                    // Check that predicates were loaded
                    runtime: cel@v14.0
                    code: "size(predicates) > 0"

                    predicates: {
                        types: [application/protobom]
                    }
                }

                {
                    // Validate SBOM metadata with outputs
                    runtime: cel@v14.0

                    // Outputs extract values from evaluation results
                    outputs: {
                        first_sbom_name: {
                            code: "predicates[0].data.metadata.name"
                        }
                    }

                    code: "predicates[0].data.metadata.name == \"SBOM-SPDX-08bdfa07-a9a1-404e-b892-9f45896c715a\""
                }

                {
                    // Check context value (demonstrates context usage)
                    runtime: cel@v14.0
                    code: "context.author == \"Puerco\""

                    outputs: {
                        author: {code: "context.author"}
                        context: {code: "context"}
                    }
                }
            ]
        }
    ]
}
